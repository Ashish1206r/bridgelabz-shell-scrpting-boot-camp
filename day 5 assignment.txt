1. Use Random Function (( RANDOM )) to get Single Digit

 echo $(( $RANDOM % 2 ))

2.Use Random to get Dice Number between 1 to 6

number=$((RANDOM%6 +1))
echo "random number is:$number"

3.Add two Random Dice Number and Print the Result

dice1=$((RANDOM%6+1))
dice2=$((RANDOM%6+1))
sum=$((dice1+dice2))
echo "$sum"

4. Write a program that reads 5 Random 2 Digit values , then find their
sum and the average

number_1=$(( RANDOM % 90 + 10 ))
number_2=$(( RANDOM % 90 + 10 ))
number_3=$(( RANDOM % 90 + 10 ))
number_4=$(( RANDOM % 90 + 10 ))
number_5=$(( RANDOM % 90 + 10 ))
echo "The five random two digit values are $number_1 $number_2 $number_3 $number_4 $number_5"
sum=$(( number_1 + number_2 + number_3 + number_4 + number_5 ))
average=$( echo $sum 5 | awk '{printf "%.2f", $1 / $2}')
echo "their sum is: $sum"
echo "their average is: $average"

5. Unit Conversion
a. 1ft = 12 in then 42 in = ? ft
b. Rectangular Plot of 60 feet x 40 feet in meters
c. Calculate area of 25 such plots in acres

no_of_inches=42
#scale=4 fixes no of digits after . to 4
no_of_feets=$(echo "scale=4; $no_of_inches / 12" | bc -l) 
echo "42 inches = $no_of_feets feets"

#b)
length_in_ft=60
breadth_in_ft=40
area_in_ft=$(( length_in_ft * breadth_in_ft ))
#scale=4 fixes no of digits after . to 4
area_in_m=$(echo " scale=4 ; $area_in_ft * 0.3048 * 0.3048" | bc -l)
echo "Area of the rectangular plot is $area_in_m meters"
#c)
no_of_plots=25
#1acr=43560 sqft
area_in_acr=$(echo " scale=4 ; $area_in_ft * $no_of_plots / 43560" | bc -l)
echo "The Area of $no_of_plots plots is $area_in_acr acres"

1.Write a program that reads 5 Random 3 Digit values and then outputs the minimum
and the maximum value

number_1=$(( RANDOM % 900 + 100 ))
number_2=$(( RANDOM % 900 + 100 ))
number_3=$(( RANDOM % 900 + 100 ))
number_4=$(( RANDOM % 900 + 100 ))
number_5=$(( RANDOM % 900 + 100 ))

echo "The five random three digit numbers are $number_1 $number_2 $number_3 $number_4 $number_5"

min_number=$number_1
max_number=$number_5

if (( number_1 > max_number ))
then    
    max_number=$number_1
fi

if (( number_2 > max_number ))
then
    max_number=$number_2
fi
if (( number_2 < min_number ))
then
    min_number=$number_2
fi

if (( number_3 > max_number ))
then
    max_number=$number_3
fi
if (( number_3 < min_number ))
then
    min_number=$number_3
fi

if (( number_4 > max_number ))
then
    max_number=$number_4
fi
if (( number_4 < min_number ))
then
    min_number=$number_4
fi

if (( number_5 < min_number ))
then
    min_number=$number_5
fi

echo "the minimum value is $min_number and the maximum value is $max_number"

Write a program that takes day and month from the command line and prints true if
day of month is between March 20 and June 20, false otherwise.

read -p "Enter day:" day
read -p "Enter month:" month
if(( month >= 3 && month <= 6 ))
then
    if(( month == 3 && day <= 20 || month == 6 && day >= 20 ))
    then
        echo "false"
    else
        echo "true"
    fi
else    
    echo "false"
fi

3. Write a program that takes a year as input and outputs the Year is a Leap Year or not
a Leap Year. A Leap Year checks for 4 Digit Number, Divisible by 4 and not 100 unless
divisible by 400.

read -p "Enter year:" year
if(( year % 4 == 0 && year % 100 !=0 || year % 400 == 0))
then
    echo "$year is leap year"
else
    echo "$year is not a leap year"
fi

Write a program to simulate a coin flip and print out "Heads" or "Tails" accordingly.

toss=$(( RANDOM % 2 ))
if(( toss == 0 ))
then    
    echo "Heads"
else
    echo "Tails"
fi

1. Read a single digit number and write the number in word.
read -p "Enter a single digit number:" number
if(( number == 0 ))
then
    echo "zero"
elif(( number == 1 ))
then
    echo "one"
elif(( number == 2 ))
then
    echo "two "
elif(( number == 3 ))
then
    echo "three"
elif(( number == 4 ))
then
    echo "four "
elif(( number == 5 ))
then
    echo "five"
elif(( number == 6 ))
then
    echo "six"
elif(( number == 7 ))
then
    echo "seven"
elif(( number == 8 ))
then
    echo "eight"
elif(( number == 9 ))
then
    echo "nine"
else
    echo "please enter single digit numbers only"
fi

2. Read a Number and Display the week day (Sunday, Monday,…)

read -p "Enter a number betwen 1 to 7:" number
if(( number == 1 ))
then
    echo "Sunday"
elif(( number == 2 ))
then
    echo "Monday"
elif(( number == 3 ))
then
    echo "Tuesday"
elif(( number == 4 ))
then
    echo "Wednesday"
elif(( number == 5 ))
then
    echo "Thursday"
elif(( number == 6 ))
then
    echo "Friday"
elif(( number == 7 ))
then
    echo "Saturday"
else
    echo "please enter only  the numbers between 1 and 7"
fi

3. Read a Number 1, 10, 100, 1000, etc and display unit, ten, hundred

read -p "Enter a number from 1,10,100,1000,10000:" number
if(( number == 1 ))
then
    echo "unit"
elif(( number == 10 ))
then
    echo "ten"
elif(( number == 100 ))
then
    echo "hundred"
elif(( number == 1000 ))
then
    echo "thousand"
elif(( number == 10000 ))
then
    echo "ten thousand"
else
    echo "please enter only specified numbers"
fi

4. Enter 3 Numbers do following arithmetic operation and find the one that
is maximum and minimum
1. a + b * c 3. c + a / b
2. a % b + c 4. a * b + c


read -p "enter first number:" x
read -p "enter second number:" y
read -p "enter third number:" z

a=$(( x + y * z ))
b=$(( z + x / y ))
c=$(( x % y + z ))
d=$(( x * y + z ))
echo "The results of the arithmetic operations are $a $b $c $d"

minimum=$a
maximum=$d

if (( a > maximum ))
then    
    maximum=$a
fi

if (( b > maximumimum ))
then
    maximum=$b
fi
if (( b < minimum ))
then
    minimum=$b
fi

if (( c > maximum ))
then
    maximum=$c
fi
if (( c < minimum ))
then
    minimum=$c
fi

if (( d > maximum ))
then
    maximum=$d
fi

echo "the minimum value is $minimum and the maximum value is $maximum"



1. Read a single digit number and write the number in word using Case

read -p "Enter a single digit number:" number
case $number in
    0)
    echo "zero"
    ;;
    1)
    echo "one"
    ;;
    2)
    echo "two"
    ;;
    3)
    echo "three"
    ;;
    4)
    echo "four "
    ;;
    5)
    echo "five"
    ;;
    6)
    echo "six"
    ;;
    7)
    echo "seven"
    ;;
    8)
    echo "eight"
    ;;
    9)
    echo "nine"
    ;;
    *)
    echo "please enter single digit numbers only"
    ;;
esac

2. Read a Number and Display the week day (Sunday, Monday,…)

read -p "Enter a number betwen 1 to 7:" number
case $number in
    1)
    echo "Sunday"
    ;;
    2)
    echo "Monday"
    ;;
    3)
    echo "Tuesday"
    ;;
    4)
    echo "Wednesday"
    ;;
    5)
    echo "Thursday"
    ;;
    6)
    echo "Friday"
    ;;
    7)
    echo "Saturday"
    ;;
    *)
    echo "please enter only  the numbers between 1 and 7"
    ;;
esac

3. Read a Number 1, 10, 100, 1000, etc and display unit, ten, hundred,…

read -p "Enter a number from 1,10,100,1000,10000:" number
case $number in
    1)
    echo "unit"
    ;;
    10)
    echo "ten"
    ;;
    100)
    echo "hundred"
    ;;
    1000)
    echo "thousand"
    ;;
    10000)
    echo "ten thousand"
    ;;
    *)
    echo "please enter only specified numbers"
    ;;
esac

4. Write a program that takes User Inputs and does Unit Conversion of
different Length units
1. Feet to Inch 3. Inch to Feet
2. Feet to Meter 4. Meter to Feet

echo "Enter an option between 1 and 4"
echo "1.Feet to Inch"
echo "2.Feet to Meter"
echo "3.Inch to Feet"
echo "4.Meter to Feet"
read option
case $option in
    1)
    read -p "enter no of feets:" no_of_feets
    no_of_inches=$(echo "scale=4;$no_of_feets * 12" | bc -l) 
    echo "$no_of_feets feets = $no_of_inches inches"
    ;;
    3)
    read -p "enter no of inches:" no_of_inches
    no_of_feets=$(echo "scale=4;$no_of_inches / 12" | bc -l) 
    echo "$no_of_inches inches = $no_of_feets feets"
    ;;
    2)
    read -p "enter no of feets:" no_of_feets
    no_of_meters=$(echo "scale=4;$no_of_feets * 0.3048" | bc -l) 
    echo "$no_of_feets feets = $no_of_meters meters"
    ;;
    4)
    read -p "enter no of meters:" no_of_meters
    no_of_feets=$(echo "scale=4;$no_of_meters / 0.3048" | bc -l) 
    echo "$no_of_meters meters = $no_of_feets feets"
    ;;
esac


